---
sudo: required

env:
  - distro: ubuntu1604
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
    test_url: example.com

  - distro: ubuntu1404
    init: /sbin/init
    run_opts: ""
    test_url: example.com

  - distro: debian8
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
    test_url: example.com

services:
  - docker

addons:
  apt:
    packages:
    - curl

before_install:
  - 'docker pull geerlingguy/docker-${distro}-ansible:latest'
    - sudo apt-get update
    - sudo apt-get install curl

script:
  - container_id=$(mktemp)

  - 'docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} geerlingguy/docker-${distro}-ansible:latest "${init}" > "${container_id}"'

  - >
    docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1
    ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml
    --syntax-check

  - >
    docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1
    ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml

  - idempotence=$(mktemp)

  - >
    docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1
    ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml
    | tee -a ${idempotence}

  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: passed' && exit 0)
    || (echo 'Idempotence test: failed' && exit 1)

  - >
    docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1
    nginx -v

  - >
    docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1
    curl -X HEAD -s -S -I -H "Host: ${test_url}" --resolve ${test_url}:80:127.0.0.1 --verbose http://${test_url}/
    | grep -q 'HTTP/1.1 301 Moved Permanently'
    && (echo 'HTTP Status test: passed' && exit 0)
    || (echo 'HTTP Status test: failed' && exit 1)

  - >
    docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1

    curl -X HEAD -s -S -I -H "Host: ${test_url}" --resolve ${test_url}:80:127.0.0.1 --verbose https://${test_url}/
    | grep -q 'HTTP/1.1 200 OK'
    && (echo 'HTTPS Status test: passed' && exit 0)
    || (echo 'HTTPS Status test: failed' && exit 1)

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
